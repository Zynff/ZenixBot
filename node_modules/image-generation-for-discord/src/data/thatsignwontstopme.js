const { createCanvas, loadImage, registerFont } = require('canvas');
const path = require('path');
const { wrapText } = require('../functions/canvas');
registerFont(path.join(__dirname, '..', 'assets', 'fonts', 'TragicMarker.otf'), { family: 'Tragic Marker' });

async function thatsignwontstopme(text) {
    if (!text) throw new Error(`Please provide a message.`)

    const base = await loadImage(`https://raw.githubusercontent.com/caseyCantCode/discordImageGenImages/main/that-sign-wont-stop-me.png`);
    const canvas = createCanvas(base.width, base.height);
    const ctx = canvas.getContext('2d');
    ctx.drawImage(base, 0, 0);
    ctx.textAlign = 'center';
    ctx.textBaseline = 'top';
    ctx.font = '62px Tragic Marker';
    let fontSize = 62;
    while (ctx.measureText(text).width > 1002) {
        fontSize--;
        ctx.font = `${fontSize}px Tragic Marker`;
    }
    const lines = await wrapText(ctx, text, 334);
    const topMost = 240 - (((fontSize * lines.length) / 2) + ((10 * (lines.length - 1)) / 2));
    for (let i = 0; i < lines.length; i++) {
        const height = topMost + ((fontSize + 10) * i);
        ctx.fillText(lines[i], 210, height);
    }
    ctx.font = '16px Tragic Marker';
    fontSize = 16;
    while (ctx.measureText(text).width > 264) {
        fontSize--;
        ctx.font = `${fontSize}px Tragic Marker`;
    }
    const bLines = await wrapText(ctx, text, 88);
    const bTopMost = 645 - (((fontSize * bLines.length) / 2) + ((2 * (bLines.length - 1)) / 2));
    for (let i = 0; i < bLines.length; i++) {
        const height = bTopMost + ((fontSize + 2) * i);
        ctx.fillText(bLines[i], 280, height);
    }
    return canvas.toBuffer()
}
module.exports = thatsignwontstopme