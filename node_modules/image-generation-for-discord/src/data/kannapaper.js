const Canvas = require('canvas')

async function kannapaper(text) {
    if (!text) throw new Error(`Please provide a message.`)

    const background = await Canvas.loadImage('http://discord.mx/FdfZmyPgyq.png')
    const canvas = Canvas.createCanvas(background.width, background.height)
    const context = canvas.getContext('2d')
    const x = 53
    const y = 25

    const cutWord = (word, count) => {
        const result = word.match(new RegExp(`.{0,${count}}`, 'g'))
        return result.filter(word => word)
    }

    const lineBreak = (text, perLine = 10, maxLines = 6) => {
        const lines = []
        let currentLineIndex = 0
        let lastSpaceIndex = 0

        for (let i = 0; i <= text.length; i++) {
            if (text[i] === ' ' || i === text.length) {
                const startPhraseindex = lastSpaceIndex === 0 ? 0 : lastSpaceIndex + 1
                const endPhraseIndex = i //i === text.length ? i : i - 1
                const phrase = text.slice(startPhraseindex, endPhraseIndex)
                const previusLine = lines[currentLineIndex] + ' ' + phrase

                if (phrase.length > perLine) {
                    const words = cutWord(phrase, perLine)
                    lines.push(...words)
                    currentLineIndex += words.length
                    if (lines.length >= maxLines) {
                        break
                    }
                } else if (previusLine.length > perLine) {
                    lines.push(phrase)
                    currentLineIndex++
                    if (lines.length >= maxLines) {
                        break
                    }
                } else {
                    lines[currentLineIndex] += phrase
                }

                lastSpaceIndex = i
            }
        }

        return lines.map(line => line.trimStart()).slice(0, maxLines)
    }

    context.drawImage(background, 0, 0, background.width, background.height)
    context.font = '15px "SF Pro Display"'
    context.rotate(12 * Math.PI / 180)

    const lines = lineBreak(text, 8, 6)
    context.fillText(lines.join('\n'), x, y)
    return canvas.toBuffer()
}
module.exports = kannapaper